# {{PROBLEM}} Class Design Recipe

## 1. Describe the Problem

As a user
So that I can keep track of my tasks
I want a program that I can add todo tasks to and see a list of them.


## 2. Design the Class Interface



```ruby
# EXAMPLE

class Reminder
  def initialize(name) # name is a string
    # ...
  end

  def remind_me_to(task) # task is a string
    # No return value
  end

  def remind()
    # Throws an exception if no task is set
    # Otherwise, returns a string reminding the user to do the task
  end
end
```

class TodoPlanner

    def initialize(name)
    end

    def add_tasks(task)
     .. adds tasks , no return value
    end

    def view_tasks
    .. lists all the tasks , throws exception if task empty
    end

end

## 3. Create Examples as Tests

_Make a list of examples of how the class will behave in different situations._

```ruby
1. planner = TodoPlanner.new("Rex")
    planner.add_tasks("")
    expect{planner.view_tasks}.to raise exception "No tasks added"

2. planner = TodoPlanner.new("Rex")
    planner.add_tasks("work1") 
    expect(planner.view_tasks).to eq "Rex you have tasks : work1"

3. planner = TodoPlanner.new("Rex")
    planner.add_tasks("work1")
    planner.add_tasks("work2") 
    planner.add_tasks("work3")  
    expect(planner.view_tasks).to eq "Rex you have tasks : work1, work2, work3"

4 planner = TodoPlanner.new("Rex")
    planner.add_tasks("work1")
    planner.add_tasks("work2") 
    planner.add_tasks("work2")  
    expect(planner.view_tasks).to eq "Rex you have tasks : work1, work2"
# EXAMPLE

# 1
reminder = Reminder("Kay")
reminder.remind_me_to("Walk the dog")
reminder.remind() # => "Walk the dog, Kay!"

# 2
reminder = Reminder("Kay")
reminder.remind() # fails with "No task set."

# 3
reminder = Reminder("Kay")
reminder.remind_me_to("")
reminder.remind() # => ", Kay!"
```

_Encode each example as a test. You can add to the above list as you go._

## 4. Implement the Behaviour

_After each test you write, follow the test-driving process of red, green, refactor to implement the behaviour._


<!-- BEGIN GENERATED SECTION DO NOT EDIT -->

---

**How was this resource?**  
[😫](https://airtable.com/shrUJ3t7KLMqVRFKR?prefill_Repository=makersacademy/golden-square&prefill_File=resources/single_class_recipe_template.md&prefill_Sentiment=😫) [😕](https://airtable.com/shrUJ3t7KLMqVRFKR?prefill_Repository=makersacademy/golden-square&prefill_File=resources/single_class_recipe_template.md&prefill_Sentiment=😕) [😐](https://airtable.com/shrUJ3t7KLMqVRFKR?prefill_Repository=makersacademy/golden-square&prefill_File=resources/single_class_recipe_template.md&prefill_Sentiment=😐) [🙂](https://airtable.com/shrUJ3t7KLMqVRFKR?prefill_Repository=makersacademy/golden-square&prefill_File=resources/single_class_recipe_template.md&prefill_Sentiment=🙂) [😀](https://airtable.com/shrUJ3t7KLMqVRFKR?prefill_Repository=makersacademy/golden-square&prefill_File=resources/single_class_recipe_template.md&prefill_Sentiment=😀)  
Click an emoji to tell us.

<!-- END GENERATED SECTION DO NOT EDIT -->